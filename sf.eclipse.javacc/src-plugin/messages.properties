# These properties (in alphabetical order) are used in the Java classes

# BF  06/2012 : PreferencesPage rewritten and replaced by JJPreferencePage
# MMa 06/2012 : Shortened some property names, reviewed JJPrefPage properties

GlobOpt.Automatically_suppress_warnings       = Automatically suppress warnings in java generated files (adds a '@SuppressWarnings(\"all\");')
GlobOpt.Browse                                = Browse...
GlobOpt.Build_automatically_on_save           = Build automatically on save (adds Nature)
GlobOpt.Check_spelling                        = Check spelling
GlobOpt.Choose_file                           = Choose jar file...
GlobOpt.Clear_JavaCC_console_before_build     = Clear the JavaCC console before building
GlobOpt.Mark_generated_files_as_derived       = Mark generated files as derived
GlobOpt.Out_of_hierarchy_selection            = Selection outside hierarchy
GlobOpt.Set_the_JavaCC_jar_file               = Set the JavaCC jar file: 
GlobOpt.Set_the_Jtb_jar_file                  = Set the JTB jar file: 
GlobOpt.Select_jar_files                      = Select jar files
GlobOpt.Spelling_Group                        = Spelling option
GlobOpt.Common_options_Group                  = Building options
GlobOpt.Variables                             = Variables...

JJBuilder.JJBuilder                = Constructor
JJBuilder.Sset_the_JavaCC_jar_file = Please set the javacc.jar file you want to compile this file with in properties menu.
JJBuilder.Set_the_Jtb_jar_file     = Please set the jtb.jar file you want to compile this file with in properties menu.

JJCCOptions.output_dir = .

JJConsole.Clear                = Clear
JJConsole.Clear_JavaCC_console = Clear JavaCC console
JJConsole.Copy                 = Copy

# JJEditorActions.Back_to_last_selection         = Back to last selection
# JJEditorActions.Back_to_last_selection_Tooltip = Goto last selection
# JJEditorActions.Compile_Action                 = Compile JavaCC file
# JJEditorActions.Compile_Action_Tooltip         = Compile current file
# JJEditorActions.Generate_Doc_Action            = Run JJDoc
# JJEditorActions.Generate_Doc_Action_Tooltip    = Run JJDoc on current file
# JJEditorActions.Goto_Declaration               = Goto Declaration
# JJEditorActions.Goto_Declaration_Tooltip       = Open Definition

JJFormat.Bug     = Sorry for this bug; submit to support your source text and this java exception
JJFormat.Message = No Formatting possible, as errors need to be fixed first!
JJFormat.Title   = Formatting unavailable

JJNature.JavaCC_nature_description = JavaCC Nature
JJNature.Project_null              = Project is null
JJNature.Problem                   = JJNature problem

JJNewJJPage.Browse                      = Browse...
JJNewJJPage.Choose_flag                 = Static / non static:
JJNewJJPage.Choose_type                 = Type:
JJNewJJPage.File_extension_must_be_jj   = File extension must be "jj" or "jjt" or "jtb"
JJNewJJPage.File_name                   = File name:
JJNewJJPage.File_name_must_be_specified = File name must be specified
JJNewJJPage.Folder                      = Folder:
JJNewJJPage.Folder_name_is_empty        = Folder name is empty
JJNewJJPage.JJT_file                    = JJT file
JJNewJJPage.JJ_file                     = JJ file
JJNewJJPage.JTB_File                    = JTB file
JJNewJJPage.JavaCC_jj_or_jjt_file       = JavaCC JJ or JJT File
JJNewJJPage.New_file                    = MyNewGrammar
JJNewJJPage.New_javacc_or_jtb_file      = New JavaCC, JJTree or JTB file
JJNewJJPage.Non_static_flag             = Non static
JJNewJJPage.Package_name                = Package:
JJNewJJPage.Select_new_file_container   = Select new file container
JJNewJJPage.Static_flag                 = Static
JJNewJJPage.The_package                 = The package
JJNewJJPage.Wizard_creates_a_new_file   = This wizard creates a new JavaCC, JJTree or JTB example file.
JJNewJJPage.does_not_exist              = does not exist

JJNewWizard.Activepage_null          = The active page of the active workbench window is null
JJNewWizard.Backingstore_problem     = Backing store problem
JJNewWizard.Creates_jj_example_file  = Creates .jj, .jjt or .jtb example file
JJNewWizard.Creating                 = Creating
JJNewWizard.Creation_of              = Creation of
JJNewWizard.Error                    = Error
JJNewWizard.Initializing_preferences = Initializing JavaCC project preferences
JJNewWizard.Opening_file_for_editing = Opening file for editing...
JJNewWizard.Opening_of               = Opening of file
JJNewWizard.Prefs_null               = The preferences are null
JJNewWizard.Reading_failed           = Reading failed
JJNewWizard.Root_problem             = Problem accessing root directory
JJNewWizard.Rootbundle_notfound      = Root bundle not found
JJNewWizard.Srcpkgdir_doesnot_exist  = Project source + package directory does not exist
JJNewWizard.Template_problem         = Problem accessing the template file
JJNewWizard.Wizardshell_problem      = Problem getting the wizard shell
JJNewWizard.Workbenchwindow_problem  = Problem accessing the active workbench window
JJNewWizard.failed                   = failed

JJOutlinePage.Collapse_all_Action  = Collapse all
JJOutlinePage.Collapse_all_Tooltip = Collapse all
JJOutlinePage.Expand_all_Action    = Expand all
JJOutlinePage.Expand_all_Tooltip   = Expand all the tree to all levels.
JJOutlinePage.Expand_1_Action      = Expand to one level deeper
JJOutlinePage.Expand_1_Tooltip     = Expand all the tree to one level deeper.
JJOutlinePage.Sort_Action          = Sort
JJOutlinePage.Sort_Tooltip         = Alphabetic Sort (productions first)

JJPrefPage.Font_atr_B        = B
JJPrefPage.Font_atr_BI       = BI
JJPrefPage.Font_atr_I        = I
JJPrefPage.Group_bnf_prod    = Bnf_productions Colors
JJPrefPage.Group_comments    = Comment Colors
JJPrefPage.Group_console     = JavaCC Console Command Color
JJPrefPage.Group_hyperlink   = JavaCC Hyperlink Color
JJPrefPage.Group_indentation = Indentation Preferences
JJPrefPage.Group_java        = Java Colors
JJPrefPage.Group_java_block  = Java Block Braces
JJPrefPage.Group_javaCC      = JavaCC base elements Colors
JJPrefPage.Group_jjtree      = JJTree Node Colors
JJPrefPage.Group_labels      = Token Label Colors 
JJPrefPage.Group_matching    = Matching Character Outline Color
JJPrefPage.Group_tool_tips   = Tool Tips
JJPrefPage.Group_options     = Option and Parser Name Colors
JJPrefPage.Group_regex       = Regular_expr_productions Colors
JJPrefPage.Group_spelling    = Comment Spell Checking
JJPrefPage.Group_states      = Lexical State Colors
JJPrefPage.Group_tokens      = Regular Expression Colors
JJPrefPage.Label_apply_on_tab        =   Apply changes when a new tab is selected
JJPrefPage.Label_comment_bg          = Comment background
JJPrefPage.Label_comment_line        = Line comment
JJPrefPage.Label_comment_block       = Block comment
JJPrefPage.Label_comment_Javadoc     = Javadoc comment
JJPrefPage.Label_console_command     = Console command
JJPrefPage.Label_hyperlink           = Hyperlink color
JJPrefPage.Label_indent_char         = Tab as indent character
JJPrefPage.Label_indent_char_nb      = Number of space or tab characters
JJPrefPage.Label_java_bg             = Java code background
JJPrefPage.Label_java_block          = {  }  in Java block
JJPrefPage.Label_java_block_brace_bg = Use Java background for  {  }
JJPrefPage.Label_java_default_text   = Default text
JJPrefPage.Label_java_identifier     = Identifiers
JJPrefPage.Label_java_keyword        = Keywords
JJPrefPage.Label_java_numeric        = Numerics
JJPrefPage.Label_java_punctuation    = Punctuation
JJPrefPage.Label_java_string         = Strings
JJPrefPage.Label_javacc_bg           = JavaCC background
JJPrefPage.Label_javacc_choice_punct      = (  |  )  *  +  ?  [  ]  
JJPrefPage.Label_javacc_default_text      = Default text
JJPrefPage.Label_javacc_expansion_brace   = {  }  in expansion_choices
JJPrefPage.Label_javacc_keyword           = Keywords
JJPrefPage.Label_javacc_numeric           = Numbers
JJPrefPage.Label_javacc_option            = Option names
JJPrefPage.Label_javacc_option_brace      = {  }
JJPrefPage.Label_javacc_other_punct       = Punctuation
JJPrefPage.Label_javacc_parser_name       = Parser name
JJPrefPage.Label_javacc_parser_name_paren = (  )
JJPrefPage.Label_javacc_string            = Strings
JJPrefPage.Label_jjtree_node_expr_paren   = (  )
JJPrefPage.Label_jjtree_node_name         = Node name
JJPrefPage.Label_jjtree_node_name_punct   = #
JJPrefPage.Label_lexical_state            = Lexical state
JJPrefPage.Label_lexical_state_next       = Next lexical state
JJPrefPage.Label_lexical_state_punct      = <  >
JJPrefPage.Label_matching_char            = (  )   {  }   [  ]   <  >  
JJPrefPage.Label_no_adv_auto_indent       = No advanced automatic indentation
JJPrefPage.Label_no_tool_tips             = Do not show tool tips
JJPrefPage.Label_no_spell_checking        = Disable spell checking 
JJPrefPage.Label_reg_ex_brace             = {  }
JJPrefPage.Label_reg_ex_bracket           = <  >
JJPrefPage.Label_reg_ex_choice_punct      = (  |  )  *  +  ?  
JJPrefPage.Label_reg_ex_other_punct       = Punctuation
JJPrefPage.Label_reg_ex_token_punct       = ~  [  -  ]
JJPrefPage.Label_token                    = Token label
JJPrefPage.Label_token_def                = Token definition
JJPrefPage.Label_token_priv_def           = Private definition
JJPrefPage.Label_token_priv_def_punct     = #
JJPrefPage.Label_token_punct              = <  >
JJPrefPage.Tab_java         = Java
JJPrefPage.Tab_javacc       = JavaCC
JJPrefPage.Tab_other        = Other
JJPrefPage.Tab_productions  = Productions
JJPrefPage.Tab_tokens       = Tokens
JJPrefPage.Title_pref_page  = Colors, indentation and other preferences for the JavaCC plugin editors and console
JJPrefPage.Tt_apply_on_tab  = \
If not checked, changes will not be applied when switching to a new tab page,\
\n they will be applied only when \"OK\" is pressed (while viewing any tab page)
JJPrefPage.Tt_button_apply      = \
\"Apply\" will only apply changes for this tab page\
\n\"OK\" will apply all changes on all tab pages\
\n\"Cancel\" will cancel all remaining changes
JJPrefPage.Tt_button_defaults   = \
\"Restore Defaults\" will only restore defaults for this tab page\
\nThe default values are displayed but not applied immediately
JJPrefPage.Tt_comment_bg        = The background color for all comments
JJPrefPage.Tt_comment_bg_button = Try using a very pale color \n (e.g. 250,255,250)
JJPrefPage.Tt_comment_block     = Block Comments are enclosed by  /*  and  */  sequences
JJPrefPage.Tt_comment_line      = Line comments begin with  //  and end at the end of the current line
JJPrefPage.Tt_comment_javadoc   = Javadoc comments are enclosed by  /**  and  */  sequences
JJPrefPage.Tt_console_command   = Sets the color of commands launched by the JavaCC plugin and displayed in the JavaCC console
JJPrefPage.Tt_font_atr          = Toggle for Bold (B), Bold-Italic (BI), Italic (I) or none
JJPrefPage.Tt_group_bnf_prod    = \
Bnf_production colors\
\n bnf_production ::= java_access_modifier java_return_type java_identifier "(" java_parameter_list ")" ":"\
\n                    java_block\
\n                    "{" expansion_choices "}"
JJPrefPage.Tt_group_comments    = Comment colors
JJPrefPage.Tt_group_console     = \
Colors for the commands launched by the plugin and displayed in the JavaCC console\
\nThe JavaCC console must be cleared before a new color is recognized
JJPrefPage.Tt_group_hyperlink   = \
Hyperlinks are shown over an eligible word (one which has a JavaCC definition)\
\n when the control key is pressed and the mouse cursor is moved over this word
JJPrefPage.Tt_group_indentation = Indentation preferences for JavaCC and Java code
JJPrefPage.Tt_group_java        = Java code base elements colors
JJPrefPage.Tt_group_java_block  = Java block preferences
JJPrefPage.Tt_group_javacc      = JavaCC code base elements colors
JJPrefPage.Tt_group_jjtree      = JJTree node colors
JJPrefPage.Tt_group_labels      = Token labels define and identify lexical tokens
JJPrefPage.Tt_group_matching    = \
To find the matching character to a given character in the following pairs types,\
\n put the text cursor (caret) after the character to be matched\
\n (nesting is respected)
JJPrefPage.Tt_group_options     = \
The options block is the first element of the file\
\nThe parser names must be identical
JJPrefPage.Tt_group_regex       = \
Regular_expr_productions colors\
\n regular_expr_production ::= [ lexical_state_list ] regexpr_kind [ "[" "IGNORE_CASE" "]" ] ":"\
\n                             "{" regexpr_spec ( "|" regexpr_spec )* "}"
JJPrefPage.Tt_group_spelling    = \
JavaCC & JTB editors comment spell checking\
\n Workbench spell checking options are set in the\
\n Preferences/General/Editors/Text Editors/Spelling tab\
\nYou can disable the nJavaCC & JTB editors comment spell checking by checking this box
JJPrefPage.Tt_group_states      = Lexical state colors
JJPrefPage.Tt_group_tool_tips   = Controls the display of tool tips 
JJPrefPage.Tt_hyperlink         = \
Sets the color of Hyperlinks (shown by the Ctrl key and mouse) \
\nOn clicking on the Hyperlink, the cursor jumps to the related JavaCC declaration
JJPrefPage.Tt_indent_char       = Check this box to use tab characters instead of spaces
JJPrefPage.Tt_indent_char_nb    = Specifies the number of spaces or tabs to be used for each level of indentation 
JJPrefPage.Tt_java_background          = The background color for all Java code
JJPrefPage.Tt_java_background_button   = Try using a very pale color \n (e.g. 255,249,243)
JJPrefPage.Tt_java_block               = The  {  }  characters which enclose a Java block in the bnf_production\
\n (the first ones, before the expansion_choices block, or those inside the expansion_choices)
JJPrefPage.Tt_java_block_brace_alt_bg  = \
Check this box to use for the Java block braces\
\n the Java background color rather than the JavaCC background color
JJPrefPage.Tt_java_default_text        = Java default text (for erroneous code)
JJPrefPage.Tt_java_keyword             = The Java keywords, primitive types and literals
JJPrefPage.Tt_java_identifier          = Java identifiers
JJPrefPage.Tt_java_numeric             = Java numeric literals of all types
JJPrefPage.Tt_java_punctuation         = Java punctuation and operator characters
JJPrefPage.Tt_java_string              = Java strings and character constants
JJPrefPage.Tt_Javacc_background        = The background color for all JavaCC code
JJPrefPage.Tt_Javacc_background_button = Try using a very pale color \n (e.g. 255,255,240)
JJPrefPage.Tt_Javacc_choice_punct      = The punctuation characters used for expansion choices
JJPrefPage.Tt_Javacc_default_text      = JavaCC default (error) text
JJPrefPage.Tt_Javacc_expansion_brace   = The  {  }  characters which enclose an expansion_choices block in the bnf_production
JJPrefPage.Tt_Javacc_keyword           = The keywords include the eleven JavaCC reserved keywords
JJPrefPage.Tt_Javacc_numeric           = JavaCC numeric literals of all types
JJPrefPage.Tt_Javacc_option            = JavaCC option names
JJPrefPage.Tt_Javacc_option_brace      = The  {  }  characters which enclose the JavaCC options list
JJPrefPage.Tt_Javacc_other_punct       = General JavaCC punctuation characters
JJPrefPage.Tt_Javacc_parser_name       = The parser name following the BEGIN_PARSER and END_PARSER keywords
JJPrefPage.Tt_Javacc_parser_name_paren = The  (  )  characters which enclose the parser name
JJPrefPage.Tt_Javacc_string            = The JavaCC Strings (always enclosed by double quote characters)
JJPrefPage.Tt_jjtree_node_name         = The name of the JJTree node
JJPrefPage.Tt_jjtree_node_name_punct   = The # character that specifies that a JJTree node name follows
JJPrefPage.Tt_jjtree_node_expr_paren   = The parenthesis which enclose the JJTree node descriptor expression
JJPrefPage.Tt_lexical_state       = The lexical state name in the lexical states list on entering a regular_expr_production
JJPrefPage.Tt_lexical_state_next  = The next lexical state on leaving a regexpr_spec
JJPrefPage.Tt_lexical_state_punct = \
The  <  >  characters which enclose a lexical states list on entering a regular_expr_production\
\n lexical_state_list ::= "<" "*" ">" | "<" java_identifier ( "," java_identifier )* ">"
JJPrefPage.Tt_matching_char       = The matching character (in these character pairs) is outlined with this color
JJPrefPage.Tt_no_adv_auto_ident   = Check this box to disable advanced automatic indentation
JJPrefPage.Tt_no_spell_checking   = Disables spell checking within comments \n (if spell checking is enabled for the editor)
JJPrefPage.Tt_no_tool_tips        = \
Check this box to stop the display of tool tips (except this one) in the JavaCC plugin preferences dialog\
\nThis option will not be recognized until the next time the JavaCC plugin preferences dialog is entered
JJPrefPage.Tt_reg_ex_brace        = The  {  }  characters which surround a regular_expr_production specification
JJPrefPage.Tt_reg_ex_bracket      = The  <  >  characters which enclose a reference to a regular_expr_production
JJPrefPage.Tt_reg_ex_choice_punct = The  (  |  )  *  +  ?  punctuation used in a regular_expr_production choice
JJPrefPage.Tt_reg_ex_other_punct  = Other punctuation characters used in a regular_expr_production
JJPrefPage.Tt_reg_ex_token_punct  = The  ~  [  -  ]  punctuation used in a character list
JJPrefPage.Tt_tab_java            = Preferences for Java code
JJPrefPage.Tt_tab_javacc          = General preferences for JavaCC elements other than Productions
JJPrefPage.Tt_tab_other           = Preferences for other miscellaneous items
JJPrefPage.Tt_tab_productions     = \
Preferences for JavaCC Productions\
\n Some labels and tool tips refer to the JavaCC grammar
JJPrefPage.Tt_token_label                = The label of a defined (public or private) token
JJPrefPage.Tt_token_label_def            = The label of a public token being defined
JJPrefPage.Tt_token_label_priv_def       = The label of a private token being defined
JJPrefPage.Tt_token_label_priv_def_punct = The  #  character which identifies a private token definition
JJPrefPage.Tt_token_label_punct          = The  <  >  around a token label reference

JJTreeOptions.outputdir = .

JTBOpt.GenDescFldNm = generate descriptive node classes field names
JTBOpt.GenDpthLvl   = generate depth level
JTBOpt.GenJdocCmt   = generate javadoc comments in nodes and visitor
JTBOpt.GenParPntrs  = generate parent pointers in all node classes
JTBOpt.GenScheme    = generate for the Scheme language
JTBOpt.GenSpecTk    = generate special tokens in the parse tree
JTBOpt.GenTDTFVis   = generate TreeDumper and TreeFormatter visitors
JTBOpt.GenVarargs   = generate arguments of variable type in visitors
JTBOpt.GnrtdFlNm    = generated .jj file name
JTBOpt.GnrtdSTDir   = generated syntax tree classes directory name
JTBOpt.GnrtdSTPck   = generated syntax tree classes package name
JTBOpt.GnrtdSupCl   = generated nodes classes super class name
JTBOpt.GnrtdVisPck  = generated visitor classes package name
JTBOpt.GnrtdVisDir  = generated visitor classes directory name
JTBOpt.InlnAccStmt  = inline accept statements
JTBOpt.NDVD         = nd = d + "/syntaxtree" and vd = d + "/visitor"
JTBOpt.NPVP         = np = p + ".syntaxtree" and vp = p + ".visitor"
JTBOpt.NodePrefix   = nodes prefix string
JTBOpt.NodeSuffix   = nodes suffix string
JTBOpt.NoOvrwrt     = do not overwrite existing files
JTBOpt.PrClLst      = print classes list
JTBOpt.SupSemErrChk = suppress semantic error checking
JTBOpt.outputdir    = .

OptAbsTab.Choose_a_directory      = Choose a directory
OptAbsTab.Options_group           = Individual options
OptAbsTab.Path_can_be_FileSection = Path can be absolute or relative to OUTPUT directory.
OptAbsTab.Path_can_be_pathSection = Path can be absolute or relative to FILE directory.
OptAbsTab.Resulting               = Internal
OptAbsTab.Resulting_group         = Resulting options on the command line
OptAbsTab.Select_directory        = Select a directory
OptAbsTab.Select_file             = Select a file
OptAbsTab.default                 = default: 
OptAbsTab.empty_default           = no default 

# PreferencesPage.Background                = JavaCC background:
# PreferencesPage.Background_comment        = Comment background:
# PreferencesPage.Background_java           = Java code background:
# PreferencesPage.ChoicesPunct_declaration  = { } : ( | ) [ ] * + ?  in choices:
# PreferencesPage.Colors_Group              = Colors
# PreferencesPage.Colors_Group_TT           = Choose colors for the different elements
# PreferencesPage.Colors_TT                 = Toggle for Bold (B), Bold-Italic (BI), Italic (I) or none
# PreferencesPage.Comment_block             = Block comments:
# PreferencesPage.Comment_javadoc           = Javadoc comments:
# PreferencesPage.Comment_line              = Line comments:
# PreferencesPage.Console_commands          = Console commands:
# PreferencesPage.Font_B                    = B
# PreferencesPage.Font_BI                   = BI
# PreferencesPage.Font_I                    = I
# PreferencesPage.Format_Group              = Format
# PreferencesPage.Indent_char               = Indent with tabs instead of spaces
# PreferencesPage.Indent_chars_number       = Number of indentation characters:
# PreferencesPage.Indent_Group              = Indentation
# PreferencesPage.Indent_Group_TT           = 1 - check the first checkbox to disable advance automatic indentation;\
# \n2 - check the second checkbox to have tabs inserted instead of spaces for indentation\
# \n3 - specify in the third line the number of tabs or spaces for each level of indentation\
# \nYou need to close and reopen the editor to see the changes
# PreferencesPage.JavaCC_keyword            = JavaCC keyword:
# PreferencesPage.Java_block                = Java block { } :
# PreferencesPage.Java_default              = Java default text:
# PreferencesPage.Java_identifier           = Java identifier:
# PreferencesPage.Java_keyword              = Java keyword:
# PreferencesPage.Java_numeric              = Java number:
# PreferencesPage.Java_string               = Java string:
# PreferencesPage.Java_punctuation          = Java punctuation:
# PreferencesPage.Lexical_state_declaration = Lexical states:
# PreferencesPage.Matching_char             = Matching opening/closing char:
# PreferencesPage.No_Adv_Auto_Indent        = No advanced automatic indentation
# PreferencesPage.Numerics                  = Numbers:
# PreferencesPage.Prefs_for_javacc_plugin   = Spelling, indentation and colors for the JavaCC plugin
# PreferencesPage.Private_token_declaration = Private token declaration:
# PreferencesPage.Regex_punct_declaration   = { } : < > [ ] , - ~  in regular_expressions:
# PreferencesPage.Spell_check_disable       = Disable spell checking when workbench spell checking is enabled
# PreferencesPage.Spell_Group               = Spelling
# PreferencesPage.Spell_Group_TT            = Workbench spell checking options are set in the Preferences/General/Editors/Text Editors/Spelling tab;\
# \n if workbench spell checking is enabled, you can disable it for jj/jjt/jtb files through this checkbox
# PreferencesPage.Strings                   = Strings:
# PreferencesPage.Token_declaration         = Token declaration:
# PreferencesPage.Text_by_default           = Text by default:

PropPage.Ask_for_rebuild_msg        = Do you want to rebuild the project for options changes to take effect ?
PropPage.Ask_for_rebuild_title      = JavaCC options change
PropPage.JJDoc_options_Tab          = jjdoc options
PropPage.JJDoc_options_Tab_TT       = For these jjdoc options:\n\
\nThe first line shows the resulting command line options that will be passed to jjdoc;\
\n you can change them directly in the field, and when you leave the field it will trigger their parsing\
\n and the following single options will be updated in the next lines accordingly, and the invalid ones will be discarded\n\
\nThe other lines correspond to the possible options of the current jjdoc version; you can change them by typing numeric or string values, or paths,\
\n or checking / unchecking boolean ones; the non default changes will be reflected in the first line
PropPage.JJTree_options_Tab         = jjtree options
PropPage.JJTree_options_Tab_TT      = For these jjtree options:\n\
\nThe first line shows the resulting command line options that will be passed to jjtree;\
\n you can change them directly in the field, and when you leave the field it will trigger their parsing\
\n and the following single options will be updated in the next lines accordingly, and the invalid ones will be discarded\n\
\nThe other lines correspond to the possible options of the current jjtree version; you can change them by typing numeric or string values, or paths,\
\n or checking / unchecking boolean ones; the non default changes will be reflected in the first line
PropPage.JTB_options_Tab            = jtb options
PropPage.JTB_options_Tab_TT         = For these jtb options:\n\
\nThe first line shows the resulting command line options that will be passed to jtb;\
\n you can change them directly in the field, and when you leave the field it will trigger their parsing\
\n and the following single options will be updated in the next lines accordingly, and the invalid ones will be discarded\n\
\nThe other lines correspond to the possible options of the current jtb version; you can change them by typing numeric or string values, or paths,\
\n or checking / unchecking boolean ones; the non default changes will be reflected in the first line
PropPage.JavaCC_options_Tab         = javacc options
PropPage.JavaCC_options_Tab_TT      = For these javacc options:\n\
\nThe first line shows the resulting command line options that will be passed to javacc;\
\n you can change them directly in the field, and when you leave the field it will trigger their parsing\
\n and the following single options will be updated in the next lines accordingly, and the invalid ones will be discarded\n\
\nThe other lines correspond to the possible options of the current javacc version; you can change them by typing numeric or string values, or paths,\
\n or checking / unchecking boolean ones; the non default changes will be reflected in the first line
PropPage.Runtime_options_Tab        = Global options
PropPage.Runtime_options_Tab_TT     = For these global options:\n\
\nLeave the jar files paths empty if you want to use the jar files included in the plugin, or give jar files paths if you want to use specific ones\n\
\nCheck the "Clear..." checkbox if you want the JavaCC console to be cleared before launching the generation\n\
\nUncheck the "Build..." checkbox if you want that saving a file does not trigger automatically the generation\n\
\nCheck the "Automatically..." checkbox if you want the plugin to add a '@SuppressWarnings(\"all\")' annotation at the beginning of the generated java files\n\
\nUncheck the "Mark generated files..." checkbox if you want the plugin not to mark the generated files as derived 

